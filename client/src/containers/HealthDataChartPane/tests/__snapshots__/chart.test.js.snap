// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HealthDataChart /> matches snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <ResponsiveContainer
        aspect={3}
        debounce={0}
        height="100%"
        width="100%"
    >
        <AreaChart
            barCategoryGap="10%"
            barGap={4}
            data={
                Array [
                    Object {
                      "date": 1,
                      "value": 1,
                    },
                    Object {
                      "date": 2,
                      "value": 3,
                    },
                    Object {
                      "date": 3,
                      "value": 7,
                    },
                    Object {
                      "date": 4,
                      "value": 3,
                    },
                    Object {
                      "date": 5,
                      "value": 2,
                    },
                    Object {
                      "date": 6,
                      "value": 1,
                    },
                    Object {
                      "date": 100,
                      "value": 9,
                    },
                  ]
            }
            layout="horizontal"
            margin={
                Object {
                    "bottom": 5,
                    "left": 0,
                    "right": 0,
                    "top": 5,
                  }
            }
            stackOffset="none"
        >
            <defs>
                <linearGradient
                    id="colorValue"
                    x1="0"
                    x2="0"
                    y1="0"
                    y2="1"
                >
                    <stop
                        offset="5%"
                        stopColor="#FFFFFF"
                        stopOpacity={0.8}
                    />
                    <stop
                        offset="95%"
                        stopColor="#FFFFFF"
                        stopOpacity={0}
                    />
                </linearGradient>
            </defs>
            <XAxis
                allowDataOverflow={false}
                allowDecimals={true}
                dataKey="date"
                domain={
                    Array [
                        1,
                        100,
                      ]
                }
                height={30}
                hide={false}
                interval="preserveStartEnd"
                mirror={false}
                orientation="bottom"
                padding={
                    Object {
                        "left": 0,
                        "right": 0,
                      }
                }
                reversed={false}
                scale="auto"
                tickCount={5}
                type="category"
                width={0}
                xAxisId={0}
            />
            <YAxis
                allowDataOverflow={false}
                allowDecimals={true}
                domain={
                    Array [
                        1,
                        9,
                      ]
                }
                height={0}
                hide={false}
                interval={2}
                mirror={false}
                orientation="left"
                padding={
                    Object {
                        "bottom": 5,
                      }
                }
                reversed={false}
                scale="auto"
                tickCount={5}
                type="number"
                width={60}
                yAxisId={0}
            />
            <CartesianGrid
                fill="none"
                height={0}
                horizontal={false}
                horizontalPoints={Array []}
                stroke="#ccc"
                strokeDasharray="2 2"
                vertical={false}
                verticalPoints={Array []}
                width={0}
                x={0}
                y={0}
            />
            <Tooltip
                active={false}
                animationDuration={400}
                animationEasing="ease"
                coordinate={
                    Object {
                        "x": 0,
                        "y": 0,
                      }
                }
                cursor={true}
                cursorStyle={Object {}}
                filterNull={true}
                isAnimationActive={true}
                itemSorter={[Function]}
                itemStyle={Object {}}
                labelStyle={Object {}}
                offset={10}
                separator=" : "
                viewBox={
                    Object {
                        "x1": 0,
                        "x2": 0,
                        "y1": 0,
                        "y2": 0,
                      }
                }
                wrapperStyle={Object {}}
            />
            <Area
                activeDot={true}
                animationBegin={0}
                animationDuration={1500}
                animationEasing="ease"
                connectNulls={false}
                dataKey="value"
                dot={false}
                fill="url(#colorValue)"
                fillOpacity={1}
                hide={false}
                isAnimationActive={false}
                legendType="line"
                points={Array []}
                stroke="#FFFFFF"
                type="monotone"
                xAxisId={0}
                yAxisId={0}
            />
        </AreaChart>
    </ResponsiveContainer>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <ResponsiveContainer
            aspect={3}
            debounce={0}
            height="100%"
            width="100%"
      >
            <AreaChart
                  barCategoryGap="10%"
                  barGap={4}
                  data={
                        Array [
                              Object {
                                "date": 1,
                                "value": 1,
                              },
                              Object {
                                "date": 2,
                                "value": 3,
                              },
                              Object {
                                "date": 3,
                                "value": 7,
                              },
                              Object {
                                "date": 4,
                                "value": 3,
                              },
                              Object {
                                "date": 5,
                                "value": 2,
                              },
                              Object {
                                "date": 6,
                                "value": 1,
                              },
                              Object {
                                "date": 100,
                                "value": 9,
                              },
                            ]
                  }
                  layout="horizontal"
                  margin={
                        Object {
                              "bottom": 5,
                              "left": 0,
                              "right": 0,
                              "top": 5,
                            }
                  }
                  stackOffset="none"
            >
                  <defs>
                        <linearGradient
                              id="colorValue"
                              x1="0"
                              x2="0"
                              y1="0"
                              y2="1"
                        >
                              <stop
                                    offset="5%"
                                    stopColor="#FFFFFF"
                                    stopOpacity={0.8}
                              />
                              <stop
                                    offset="95%"
                                    stopColor="#FFFFFF"
                                    stopOpacity={0}
                              />
                        </linearGradient>
                  </defs>
                  <XAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        dataKey="date"
                        domain={
                              Array [
                                    1,
                                    100,
                                  ]
                        }
                        height={30}
                        hide={false}
                        interval="preserveStartEnd"
                        mirror={false}
                        orientation="bottom"
                        padding={
                              Object {
                                    "left": 0,
                                    "right": 0,
                                  }
                        }
                        reversed={false}
                        scale="auto"
                        tickCount={5}
                        type="category"
                        width={0}
                        xAxisId={0}
                  />
                  <YAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        domain={
                              Array [
                                    1,
                                    9,
                                  ]
                        }
                        height={0}
                        hide={false}
                        interval={2}
                        mirror={false}
                        orientation="left"
                        padding={
                              Object {
                                    "bottom": 5,
                                  }
                        }
                        reversed={false}
                        scale="auto"
                        tickCount={5}
                        type="number"
                        width={60}
                        yAxisId={0}
                  />
                  <CartesianGrid
                        fill="none"
                        height={0}
                        horizontal={false}
                        horizontalPoints={Array []}
                        stroke="#ccc"
                        strokeDasharray="2 2"
                        vertical={false}
                        verticalPoints={Array []}
                        width={0}
                        x={0}
                        y={0}
                  />
                  <Tooltip
                        active={false}
                        animationDuration={400}
                        animationEasing="ease"
                        coordinate={
                              Object {
                                    "x": 0,
                                    "y": 0,
                                  }
                        }
                        cursor={true}
                        cursorStyle={Object {}}
                        filterNull={true}
                        isAnimationActive={true}
                        itemSorter={[Function]}
                        itemStyle={Object {}}
                        labelStyle={Object {}}
                        offset={10}
                        separator=" : "
                        viewBox={
                              Object {
                                    "x1": 0,
                                    "x2": 0,
                                    "y1": 0,
                                    "y2": 0,
                                  }
                        }
                        wrapperStyle={Object {}}
                  />
                  <Area
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1500}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="value"
                        dot={false}
                        fill="url(#colorValue)"
                        fillOpacity={1}
                        hide={false}
                        isAnimationActive={false}
                        legendType="line"
                        points={Array []}
                        stroke="#FFFFFF"
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
                  />
            </AreaChart>
      </ResponsiveContainer>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <HealthDataChart
        color="#FFFFFF"
        entries={
                Array [
                        Object {
                          "date": 1,
                          "value": 1,
                        },
                        Object {
                          "date": 2,
                          "value": 3,
                        },
                        Object {
                          "date": 3,
                          "value": 7,
                        },
                        Object {
                          "date": 4,
                          "value": 3,
                        },
                        Object {
                          "date": 5,
                          "value": 2,
                        },
                        Object {
                          "date": 6,
                          "value": 1,
                        },
                        Object {
                          "date": 100,
                          "value": 9,
                        },
                      ]
        }
        id="id"
        title="title"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "color": "#FFFFFF",
          "entries": Array [
            Object {
              "date": 1,
              "value": 1,
            },
            Object {
              "date": 2,
              "value": 3,
            },
            Object {
              "date": 3,
              "value": 7,
            },
            Object {
              "date": 4,
              "value": 3,
            },
            Object {
              "date": 5,
              "value": 2,
            },
            Object {
              "date": 6,
              "value": 1,
            },
            Object {
              "date": 100,
              "value": 9,
            },
          ],
          "id": "id",
          "title": "title",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <ResponsiveContainer
                    aspect={3}
                    debounce={0}
                    height="100%"
                    width="100%"
          >
                    <AreaChart
                              barCategoryGap="10%"
                              barGap={4}
                              data={
                                        Array [
                                                  Object {
                                                    "date": 1,
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "date": 2,
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "date": 3,
                                                    "value": 7,
                                                  },
                                                  Object {
                                                    "date": 4,
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "date": 5,
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "date": 6,
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "date": 100,
                                                    "value": 9,
                                                  },
                                                ]
                              }
                              layout="horizontal"
                              margin={
                                        Object {
                                                  "bottom": 5,
                                                  "left": 0,
                                                  "right": 0,
                                                  "top": 5,
                                                }
                              }
                              stackOffset="none"
                    >
                              <defs>
                                        <linearGradient
                                                  id="colorValue"
                                                  x1="0"
                                                  x2="0"
                                                  y1="0"
                                                  y2="1"
                                        >
                                                  <stop
                                                            offset="5%"
                                                            stopColor="#FFFFFF"
                                                            stopOpacity={0.8}
                                                  />
                                                  <stop
                                                            offset="95%"
                                                            stopColor="#FFFFFF"
                                                            stopOpacity={0}
                                                  />
                                        </linearGradient>
                              </defs>
                              <XAxis
                                        allowDataOverflow={false}
                                        allowDecimals={true}
                                        dataKey="date"
                                        domain={
                                                  Array [
                                                            1,
                                                            100,
                                                          ]
                                        }
                                        height={30}
                                        hide={false}
                                        interval="preserveStartEnd"
                                        mirror={false}
                                        orientation="bottom"
                                        padding={
                                                  Object {
                                                            "left": 0,
                                                            "right": 0,
                                                          }
                                        }
                                        reversed={false}
                                        scale="auto"
                                        tickCount={5}
                                        type="category"
                                        width={0}
                                        xAxisId={0}
                              />
                              <YAxis
                                        allowDataOverflow={false}
                                        allowDecimals={true}
                                        domain={
                                                  Array [
                                                            1,
                                                            9,
                                                          ]
                                        }
                                        height={0}
                                        hide={false}
                                        interval={2}
                                        mirror={false}
                                        orientation="left"
                                        padding={
                                                  Object {
                                                            "bottom": 5,
                                                          }
                                        }
                                        reversed={false}
                                        scale="auto"
                                        tickCount={5}
                                        type="number"
                                        width={60}
                                        yAxisId={0}
                              />
                              <CartesianGrid
                                        fill="none"
                                        height={0}
                                        horizontal={false}
                                        horizontalPoints={Array []}
                                        stroke="#ccc"
                                        strokeDasharray="2 2"
                                        vertical={false}
                                        verticalPoints={Array []}
                                        width={0}
                                        x={0}
                                        y={0}
                              />
                              <Tooltip
                                        active={false}
                                        animationDuration={400}
                                        animationEasing="ease"
                                        coordinate={
                                                  Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                        }
                                        cursor={true}
                                        cursorStyle={Object {}}
                                        filterNull={true}
                                        isAnimationActive={true}
                                        itemSorter={[Function]}
                                        itemStyle={Object {}}
                                        labelStyle={Object {}}
                                        offset={10}
                                        separator=" : "
                                        viewBox={
                                                  Object {
                                                            "x1": 0,
                                                            "x2": 0,
                                                            "y1": 0,
                                                            "y2": 0,
                                                          }
                                        }
                                        wrapperStyle={Object {}}
                              />
                              <Area
                                        activeDot={true}
                                        animationBegin={0}
                                        animationDuration={1500}
                                        animationEasing="ease"
                                        connectNulls={false}
                                        dataKey="value"
                                        dot={false}
                                        fill="url(#colorValue)"
                                        fillOpacity={1}
                                        hide={false}
                                        isAnimationActive={false}
                                        legendType="line"
                                        points={Array []}
                                        stroke="#FFFFFF"
                                        type="monotone"
                                        xAxisId={0}
                                        yAxisId={0}
                              />
                    </AreaChart>
          </ResponsiveContainer>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <ResponsiveContainer
                    aspect={3}
                    debounce={0}
                    height="100%"
                    width="100%"
          >
                    <AreaChart
                              barCategoryGap="10%"
                              barGap={4}
                              data={
                                        Array [
                                                  Object {
                                                    "date": 1,
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "date": 2,
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "date": 3,
                                                    "value": 7,
                                                  },
                                                  Object {
                                                    "date": 4,
                                                    "value": 3,
                                                  },
                                                  Object {
                                                    "date": 5,
                                                    "value": 2,
                                                  },
                                                  Object {
                                                    "date": 6,
                                                    "value": 1,
                                                  },
                                                  Object {
                                                    "date": 100,
                                                    "value": 9,
                                                  },
                                                ]
                              }
                              layout="horizontal"
                              margin={
                                        Object {
                                                  "bottom": 5,
                                                  "left": 0,
                                                  "right": 0,
                                                  "top": 5,
                                                }
                              }
                              stackOffset="none"
                    >
                              <defs>
                                        <linearGradient
                                                  id="colorValue"
                                                  x1="0"
                                                  x2="0"
                                                  y1="0"
                                                  y2="1"
                                        >
                                                  <stop
                                                            offset="5%"
                                                            stopColor="#FFFFFF"
                                                            stopOpacity={0.8}
                                                  />
                                                  <stop
                                                            offset="95%"
                                                            stopColor="#FFFFFF"
                                                            stopOpacity={0}
                                                  />
                                        </linearGradient>
                              </defs>
                              <XAxis
                                        allowDataOverflow={false}
                                        allowDecimals={true}
                                        dataKey="date"
                                        domain={
                                                  Array [
                                                            1,
                                                            100,
                                                          ]
                                        }
                                        height={30}
                                        hide={false}
                                        interval="preserveStartEnd"
                                        mirror={false}
                                        orientation="bottom"
                                        padding={
                                                  Object {
                                                            "left": 0,
                                                            "right": 0,
                                                          }
                                        }
                                        reversed={false}
                                        scale="auto"
                                        tickCount={5}
                                        type="category"
                                        width={0}
                                        xAxisId={0}
                              />
                              <YAxis
                                        allowDataOverflow={false}
                                        allowDecimals={true}
                                        domain={
                                                  Array [
                                                            1,
                                                            9,
                                                          ]
                                        }
                                        height={0}
                                        hide={false}
                                        interval={2}
                                        mirror={false}
                                        orientation="left"
                                        padding={
                                                  Object {
                                                            "bottom": 5,
                                                          }
                                        }
                                        reversed={false}
                                        scale="auto"
                                        tickCount={5}
                                        type="number"
                                        width={60}
                                        yAxisId={0}
                              />
                              <CartesianGrid
                                        fill="none"
                                        height={0}
                                        horizontal={false}
                                        horizontalPoints={Array []}
                                        stroke="#ccc"
                                        strokeDasharray="2 2"
                                        vertical={false}
                                        verticalPoints={Array []}
                                        width={0}
                                        x={0}
                                        y={0}
                              />
                              <Tooltip
                                        active={false}
                                        animationDuration={400}
                                        animationEasing="ease"
                                        coordinate={
                                                  Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                        }
                                        cursor={true}
                                        cursorStyle={Object {}}
                                        filterNull={true}
                                        isAnimationActive={true}
                                        itemSorter={[Function]}
                                        itemStyle={Object {}}
                                        labelStyle={Object {}}
                                        offset={10}
                                        separator=" : "
                                        viewBox={
                                                  Object {
                                                            "x1": 0,
                                                            "x2": 0,
                                                            "y1": 0,
                                                            "y2": 0,
                                                          }
                                        }
                                        wrapperStyle={Object {}}
                              />
                              <Area
                                        activeDot={true}
                                        animationBegin={0}
                                        animationDuration={1500}
                                        animationEasing="ease"
                                        connectNulls={false}
                                        dataKey="value"
                                        dot={false}
                                        fill="url(#colorValue)"
                                        fillOpacity={1}
                                        hide={false}
                                        isAnimationActive={false}
                                        legendType="line"
                                        points={Array []}
                                        stroke="#FFFFFF"
                                        type="monotone"
                                        xAxisId={0}
                                        yAxisId={0}
                              />
                    </AreaChart>
          </ResponsiveContainer>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <HealthDataChart
    color="#FFFFFF"
    entries={
        Array [
            Object {
              "date": 1,
              "value": 1,
            },
            Object {
              "date": 2,
              "value": 3,
            },
            Object {
              "date": 3,
              "value": 7,
            },
            Object {
              "date": 4,
              "value": 3,
            },
            Object {
              "date": 5,
              "value": 2,
            },
            Object {
              "date": 6,
              "value": 1,
            },
            Object {
              "date": 100,
              "value": 9,
            },
          ]
    }
    id="id"
    title="title"
/>,
}
`;
